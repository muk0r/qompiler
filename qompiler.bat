@Echo Off
setlocal enabledelayedexpansion

Title Qompiler v1.05
::Make sure these version numbers match
Set _v=1.05

If Not Exist bin\qbsp.exe GoTo NoTools
If Not Exist bin\vis.exe GoTo NoTools
If Not Exist bin\light.exe GoTo NoTools
If Not Exist Qompiled\Nul MD Qompiled
If Not Exist Maps\Nul MD Maps
If Not Exist ENTs\Nul MD ENTs
If Not Exist WADs\Nul MD WADs
If Not Exist Logs\Nul MD Logs
If Not Exist Configs\Nul MD Configs
::When Qompiler runs a tool or operation, it gets fed two arguments. 
::First(%1) is one of the commands listed below to route to the needed tool.
::Second(%2) is the needed file. Which is used when the tool is run.
If "%1"=="DoIt" GoTo Qompile
If "%1"=="DoExtract" GoTo Textures
If "%1"=="DoEntities" GoTo Entities
If Not "%1"=="" GoTo NeedMaps


:Logo
Echo    ____                        _ __         
Echo   / __ \____  ____ ___  ____  (_) /__  _____
Echo  / / / / __ \/ __ `__ \/ __ \/ / / _ \/ ___/
Echo / /_/ / /_/ / / / / / / /_/ / / /  __/ /    
Echo \___\_\____/_/ /_/ /_/ .___/_/_/\___/_/     
Echo                     /_/               

:Start
Echo.
Echo Lets Qompile some maps.
Echo.
Echo 1. [N]ew Configuration
Echo 2. [L]oad Configuration
Echo 3. [Q]uick Qompile
Echo.
Echo Extract:
Echo.
Echo 4. [T]extures
Echo 5. [E]ntities
Echo.
Choice /N /C:NLQTE
if ERRORLEVEL 5 GoTo RunEntities
If ERRORLEVEL 4 GoTo RunTextures
If ERRORLEVEL 3 GoTo Quick
If ERRORLEVEL 2 GoTo Load
If ERRORLEVEL 1 GoTo NewConfig
Echo.

:NoConfigs
Echo.
Echo No configurations found...
Echo.

:NewConfig
Echo.
Echo What would you like to name this configuration?
Echo.
Set /p _config=
If Exist Configs\%_config%.bat GoTo Overwrite 
) else (
GoTo Settings

:Overwrite
Echo.
Echo	The config %_config% already exists.
Echo.
Echo 1. [O]verwrite old config
Echo 2. [R]ename current
Echo.
Choice /N /C:OR
If ERRORLEVEL 2 GoTo NewConfig
If ERRORLEVEL 1 GoTo Settings

:Load
Echo.
Echo	Here are the currently available configurations:
Echo.
::Search the 'Configs' folder for configs, display them if available or go to NoConfigs
>nul 2>nul dir /a-d /s "Configs\*.bat" && (dir /a-d /b Configs\*.bat) || (GoTo NoConfigs)
Echo.
Echo What configuration would you like to load?
Echo.
Set /p _config=
Echo.
If Not Exist Configs/%_config%.bat GoTo ReLoad
) else ( 
Echo Using configuration "%_config%"...
Call Configs/%_config%.bat
Echo.
::Display settings user has applied to tools
Echo QBSP options "%_qbsp%"
Echo.
Echo Vis options "%_vis%"
Echo.
Echo Light options "%_light%"
Echo.
Echo Is this ok?
Echo.
Echo [Y]es? or [N]o?
Echo.
Choice /N /C:YN
If ERRORLEVEL 2 GoTo Load
If ERRORLEVEL 1 GoTo Run

:ReLoad
Echo Config does not exist...
GoTo Load

:Quick
Echo.
Echo You can type 'off' to turn off any tools you dont need to run. 
Echo.
Set /p _qbsp=Input any desired QBSP settings, then press "Enter" to continue...
Echo.
Set /p _vis=Input any desired VIS settings, then press "Enter" to continue...
Echo.
Set /p _light=Input any desired LIGHT settings, then press "Enter" to continue...
GoTo Run

:Settings
Echo.
Echo You can type 'off' to turn off any tools you dont need to run.
Echo.
Set /p _qbsp=Input any desired QBSP settings, then press "Enter" to continue...
Echo.
Set /p _vis=Input any desired VIS settings, then press "Enter" to continue...
Echo.
Set /p _light=Input any desired LIGHT settings, then press "Enter" to continue...
Echo ::Generated by Qompiler v%_v%>configs\%_config%.bat
Echo set _qbsp=%_qbsp%>>configs\%_config%.bat
Echo set _vis=%_vis%>>configs\%_config%.bat
Echo set _light=%_light%>>configs\%_config%.bat
Echo.

:Run
If "%_config%" == "*" Call configs\%_config%.bat 
If "%_qbsp%" == "off" GoTo NoQBSP
) else (
set _filetype=MAP
If Not Exist *.MAP GoTo NeedMaps
::For each loop of a .map call this batch file with the arguments 'DoIt' and '%%i', where '%%i' now equals a .map. 
For %%i in (*.MAP) do call Qompiler DoIt %%i
GoTo End

:NoQBSP
set _filetype=BSP
If Not Exist *.BSP GoTo NeedMaps
For %%i in (*.BSP) do call Qompiler DoIt %%i

:Qompile
Echo Qompiling map %2...

:QBSP
If "%_qbsp%" == "off" GoTo Vis
) else (
Echo Running QBSP...
bin\qbsp.exe %_qbsp% %2 >nul

:VIS
If "%_vis%" == "off" GoTo Light
) else (
Echo Running VIS...
bin\vis.exe %_vis% %2 >nul

:Light
If "%_light%" == "off" GoTo Finished
) else (
Echo Running Light...
bin\light.exe %_light% %2 >nul

:Finished
Echo -[Finished Qompiling %2...]-
Echo %2>>Logs\Qompiled.txt
Move %2 Qompiled>Nul
Echo.
::Find any warnings or errors in the logs and display them
@for /F "delims=" %%a in ('findstr /I "warning" *.log') do @echo %%a
@for /F "delims=" %%a in ('findstr /I "error" *.log') do @echo %%a
If Exist "*.prt" Del "*.prt">Nul
If Exist "*.lit" Move "*.lit" Maps>Nul
If Exist "*.bsp" Move "*.bsp" Maps>Nul
If Exist "*.log" Move "*.log" Logs>Nul
Echo.
Goto QompileEnd

:RunTextures
set _filetype=BSP
If Not Exist *.BSP GoTo NeedMaps
For %%i in (*.BSP) do call Qompiler DoExtract %%i
GoTo End

:Textures
echo.
Echo Extracting textures from %2...
Echo.
bin\bsputil.exe --extract-textures %2 >nul
Echo %2>>Logs\qompiled-textures.txt
Move %2 Qompiled>Nul
If Exist "*.wad" Move "*.wad" WADs>nul
GoTo QompileEnd

:RunEntities
set _filetype=BSP
If Not Exist *.BSP GoTo NeedMaps
For %%i in (*.BSP) do call Qompiler DoEntities %%i
GoTo End

:Entities
echo.
Echo Extracting entities from %2...
Echo.
bin\bsputil.exe --extract-entities %2 >nul
Echo %2>>Logs\qompiled-entities.txt
Move %2 Qompiled>Nul
If Exist "*.ent" Move "*.ent" ENTs>nul
GoTo QompileEnd

:NeedMaps
Echo.
Echo Qompiler and your .%_filetype%(s) must be in the same folder.  
Echo Be sure your compiling tools are in the Tools directory, as well.
Goto Restart

:NoTools
Echo Need qbsp.exe/vis.exe/light.exe/bsputil.exe in the Tools directory.
Goto Restart

:Restart
Echo.
Echo Do you wish to restart?
Echo.
Echo [Y]es? or [N]o?
Echo.
Choice /N /C:YN
If ERRORLEVEL 2 GoTo End
If ERRORLEVEL 1 GoTo Start

:End
Echo.
Echo Press any key to exit...
Pause >nul

:QompileEnd
